const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;
const ENDPOINT = `${API_BASE_URL}/WarehouseOutboundReceipts`;

export interface CreateOutboundReceiptInput {
  exportedQuantity: number;
  note?: string;
  destination?: string;
}

export interface ConfirmOutboundReceiptInput {
  confirmedQuantity: number;
  destinationNote?: string;
}

// üì• L·∫•y t·∫•t c·∫£ phi·∫øu xu·∫•t kho thu·ªôc c√¥ng ty staff
export async function getAllOutboundReceipts() {
  const token = localStorage.getItem("token");
  const res = await fetch(`${ENDPOINT}`, {
    headers: { Authorization: `Bearer ${token}` },
  });

  if (!res.ok) throw new Error(await res.text());
  return await res.json();
}

// üîç Xem chi ti·∫øt phi·∫øu xu·∫•t
export async function getOutboundReceiptById(id: string) {
  const token = localStorage.getItem("token");
  const res = await fetch(`${ENDPOINT}/${id}`, {
    headers: { Authorization: `Bearer ${token}` },
  });

  if (!res.ok) throw new Error(await res.text());
  return await res.json();
}

// ‚úçÔ∏è T·∫°o phi·∫øu xu·∫•t kho (g·∫Øn v·ªõi outbound request)
export async function createOutboundReceipt(outboundRequestId: string, input: CreateOutboundReceiptInput) {
  const token = localStorage.getItem("token");
  const res = await fetch(`${ENDPOINT}/${outboundRequestId}/receipt`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify(input),
  });

  if (!res.ok) throw new Error(await res.text());
  return await res.text(); // th∆∞·ªùng tr·∫£ v·ªÅ id ho·∫∑c message
}

// ‚úÖ X√°c nh·∫≠n phi·∫øu xu·∫•t kho
export async function confirmOutboundReceipt(receiptId: string, input: ConfirmOutboundReceiptInput) {
  const token = localStorage.getItem("token");
  const res = await fetch(`${ENDPOINT}/${receiptId}/confirm`, {
    method: "PUT",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify(input),
  });

  if (!res.ok) throw new Error(await res.text());
  return await res.json(); // c√≥ th·ªÉ ch·ª©a message, id
}
